1 Vertex per Voxel (voxel is a cube with 8 corners)
pass into VS
use texture to find densities at corners
output which edges are filled into GS
GS create marker points
output to buffer, loop back into VS
VS creates coords and normal for each vertex
GS creates actual vertexes


{int x_y_z} * 32768
VS - use texture to find corner values
{int x_y_z, byte corners}
GS - generate markers, cull empty/full spaces
{int x_y_z_edges}
VS - create triangle struct
{float3 coord1, float3 normal1, float3 coord2, float3 normal2, float3 coord3, float3 normal3}
GS - create actual vertices

int x_y_z
32 bit int
6 bits each, IE 0-31. Room left for other shizzle.
8 bits for corners
full/not full
could use 1 int for each, for now
